@page "/product/{id:int}" 
@inject IProductService ProductService


<div class="media">
    <div class="media-img-big-wrapper mr-2">
        <img class="media-img-big" src="@product.Image" alt="@product.Title" />

    </div>
    <div class="media-body">
        <h2 class="mb-0">@product.Title</h2>
        <p>@product.Description</p>
        @if (product.Variants != null && product.Variants.Count > 1)
        {
            <div class="form-group">
                <select class="form-control" @bind="currentEditionId">
                    @foreach (var variant in product.Variants)
                    {
                        <option value="@variant.EditionId">@variant.Edition.Name</option>
                    }

                </select>
            </div>
        }
        @if(GetSelectedVariant() != null)
        { 
        @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
        {
            <h6 class="text-muted original-price">$@GetSelectedVariant().OriginalPrice</h6>
        }
        <h4 class="price">$@GetSelectedVariant().Price</h4>
        }
        <button class="btn btn-primary"><i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart</button>
    </div>
</div>

@code {
    private Product product = new Product();
    private int currentEditionId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {

        product = await ProductService.GetProduct(Id);
        if(product.Variants.Count > 0)
        {
            currentEditionId = product.Variants[0].EditionId;
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.EditionId == currentEditionId);
        return variant;
    }
}
